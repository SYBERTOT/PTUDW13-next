<script>
  var map;
	var geocoder;
	var markers = [];
	var infowindows = [];
	var diemdatsArray = {{{json diemdats}}};
	var loaibangquangcaosArray = {{{ json loaibangquangcaos}}}
	function initMap() {
		map = new google.maps.Map(document.getElementById("map"), {
		zoom: 9,
		center: { lat: 10.7858, lng: 106.7085 },
		});
		geocoder = new google.maps.Geocoder();
    document.getElementById("toggle-chuaQH-markers").addEventListener("change", function() {
        if (this.checked) {
          showQHMarkers(false, map);
        } else {
          showQHMarkers(false, null);
        }
    });

    document.getElementById("toggle-daQH-markers").addEventListener("change", function() {
        if (this.checked) {
            showQHMarkers(true, map);
        } else {
            showQHMarkers(true, null);
        }
    });

    document.getElementById("toggle-coQC-markers").addEventListener("change", function() {
        if (this.checked) {
            showQCMarkers(true, map);
        } else {
            showQCMarkers(true, null);
        }
    });

    document.getElementById("toggle-khongQC-markers").addEventListener("change", function() {
        if (this.checked) {
          showQCMarkers(false, map);
        } else {
          showQCMarkers(false, null);
        }
    });

		setMarkers(map);

    markerCluster = new MarkerClusterer(map, markers, {
      imagePath:
        "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",
    });

    // Add event listener for zoom change
    google.maps.event.addListener(map, 'zoom_changed', function () {
      var currentZoom = map.getZoom();

      // Adjust clusterer based on zoom level
      if (currentZoom >= 14) {
        markerCluster.setMaxZoom(20);
      } else {
        markerCluster.setMaxZoom(14);
      }
    });

    var geolocationControlDiv = document.createElement("div");
    var geolocationControl = new GeolocationControl(geolocationControlDiv, map);

    geolocationControlDiv.index = 1;
    map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(geolocationControlDiv);

    // Add event listener for map click
    google.maps.event.addListener(map, 'click', function (event) {
      // Clear existing markers
      clearMarkers();

      // Get clicked coordinates
      const clickedLocation = {
        lat: event.latLng.lat(),
        lng: event.latLng.lng(),
      };

      // Reverse geocode the clicked location
      reverseGeocode(clickedLocation, map);
    });
	}

  function GeolocationControl(controlDiv, map) {
    // Set CSS for the control button
    var controlUI = document.createElement("div");
    controlUI.style.backgroundColor = "#fff";
    controlUI.style.border = "2px solid #fff";
    controlUI.style.borderRadius = "3px";
    controlUI.style.boxShadow = "0 2px 6px rgba(0,0,0,.3)";
    controlUI.style.cursor = "pointer";
    controlUI.style.marginBottom = "22px";
    controlUI.style.textAlign = "center";
    controlUI.title = "Click to center map on your location";
    controlDiv.appendChild(controlUI);

    // Set CSS for the control text
    var controlText = document.createElement("div");
    controlText.style.color = "rgb(25,25,25)";
    controlText.style.fontFamily = "Roboto,Arial,sans-serif";
    controlText.style.fontSize = "16px";
    controlText.style.lineHeight = "38px";
    controlText.style.paddingLeft = "5px";
    controlText.style.paddingRight = "5px";
    controlText.innerHTML = "Current Location";
    controlUI.appendChild(controlText);

    // Setup the click event listeners
    controlUI.addEventListener("click", function () {
        if (navigator.geolocation) {
        // If the geolocation is supported by the browser
        navigator.geolocation.getCurrentPosition(
          function (position) {
            // Success callback
            const userLocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            };

            // Center the map on the user's location
            map.setCenter(userLocation);

            // Create a marker for the user's location (optional)
            const userMarker = new google.maps.Marker({
              position: userLocation,
              map: map,
              title: "Your Location",
            });

            // You can do more with the user's location if needed
            console.log("User's Location:", userLocation);
          },
          function (error) {
            // Error callback
            switch (error.code) {
              case error.PERMISSION_DENIED:
                alert("User denied the request for Geolocation.");
                break;
              case error.POSITION_UNAVAILABLE:
                alert("Location information is unavailable.");
                break;
              case error.TIMEOUT:
                alert("The request to get user location timed out.");
                break;
              case error.UNKNOWN_ERROR:
                alert("An unknown error occurred.");
                break;
            }
          }
        );
      } else {
        // Geolocation is not supported by the browser
        alert("Geolocation is not supported by your browser.");
      }
    });
  }

  function showQHMarkers(daQH, map) {
      for (let i=0; i<markers.length; i++) {
          if (markers[i].diemdat.QuyHoach == daQH) {
              markers[i].setMap(map);
          }
      }
  }

  function showQCMarkers(coQC, map) {
    if (coQC) {
        for (let i=0; i<markers.length; i++) {
          if (markers[i].diemdat.BangQuangCaos.length > 0) {
              markers[i].setMap(map);
          }
        }
    } else {
        for (let i=0; i<markers.length; i++) {
          if (markers[i].diemdat.BangQuangCaos.length == 0) {
              markers[i].setMap(map);
          }
        }
    }

  }
	// Data for the markers consisting of a name, a LatLng and a zIndex for the
	// order in which these markers should display on top of each other.

	function geocodeAddress(address, map) { // add map as a parameter
		geocoder.geocode({'address': address}, function(results, status) {
		if (status === 'OK') {
			map.setCenter(results[0].geometry.location);
			clearMarkers();
			var marker = new google.maps.Marker({
			map: map, 
			position: results[0].geometry.location
			});
			markers.push(marker);
		} else {
			alert('Geocode was not successful for the following reason: ' + status);
		}
		});
	}

	function setMarkers(map) {
		clearMarkers();
		for (let i = 0; i < diemdatsArray.length; i++) {
			const diemdat = diemdatsArray[i];
			var status = "CHƯA QUY HOẠCH";
      var markerImgPath = "../img/marker-red.png";
			if (diemdat.QuyHoach == true) {
				status = "ĐÃ QUY HOẠCH";
        markerImgPath = "../img/marker-green.png";
			}
			var marker = new google.maps.Marker({
				position: {lat: parseFloat(diemdat.KinhDo), lng: parseFloat(diemdat.ViDo)},
				map,
				title: diemdat.DiaChi,
        icon: {
          url: markerImgPath
        },
        diemdat,
			});
			markers.push(marker);

			var infowindow = new google.maps.InfoWindow({
					content: diemdat.DiaChi + '<br>' +
							diemdat.KhuVuc + '<br>' +
							diemdat.LoaiDiemDat.Ten + '<br>' +
							diemdat.HinhThucDiemDat.Ten + '<br>' +
							status + '<br>'
				});
			infowindows.push(infowindow);

			google.maps.event.addListener(marker, 'click', (function(marker, i) {
				return function() {
					infowindows[i].open(map, marker);
				}
			})(marker, i));

			
			
			google.maps.event.addListener(marker,'dblclick',function() {
				const offcanvasElement = document.getElementById("markerInfo");
				if (offcanvasElement) {
					offcanvasElement.querySelector('#adsInfo').innerHTML = '';
					offcanvasElement.querySelector('#diachi').innerHTML = diemdat.DiaChi;
					offcanvasElement.querySelector('#khuvuc').innerHTML = 'Khu vực: ' +  diemdat.KhuVuc;
          offcanvasElement.querySelector('#loaivitri').innerHTML = 'Loại vị trí: ' +  diemdat.LoaiDiemDat.Ten;
          offcanvasElement.querySelector('#hinhthuc').innerHTML = 'Hình thức quảng cáo: ' +  diemdat.HinhThucDiemDat.Ten;
          if (diemdat.QuyHoach == true) {
            offcanvasElement.querySelector('#quyhoach').innerHTML = "ĐÃ QUY HOẠCH";
          } else {
            offcanvasElement.querySelector('#quyhoach').innerHTML = "CHƯA QUY HOẠCH";
          }
          offcanvasElement.querySelector('#diachianh').src = diemdat.DiaChiAnh;
          offcanvasElement.querySelector('#iddiemdat').value = diemdat.id;


					for (let j = 0; j < diemdat.BangQuangCaos.length; j++) {
						offcanvasElement.querySelector('#adsInfo').innerHTML +=
						`<div class="card-body mb-2">
                    		<h3 style="font-size: 18px; font-weight: 700; color: black;">${loaibangquangcaosArray[diemdat.BangQuangCaos[j].LoaiBangQuangCaoId].Ten}</h3>
                    		<h3 style="font-size: 15px; font-weight: 600; color: black;">${diemdat.DiaChi}</h3>
                    		<p style="font-size: 15px;">Kích thước: ${diemdat.BangQuangCaos[j].KichThuoc}</br> Số lượng: 1 trụ/bảng </br> Hình thức: ${diemdat.HinhThucDiemDat.Ten} </br> Phân loại: ${diemdat.LoaiDiemDat.Ten}</p>
                    		<div class="btn-group" role="group">
								<button type="button" class="bi bi-info-circle border-0 rounded-0" data-dismiss="modal" aria-label="Close" style="float: inline-start; font-size: 20px; background-color: white;" onclick="showdetails(${i},${j})"></button>
                      		<button type="button" class="btn bg-transparent" data-bs-toggle="modal" data-bs-target="#guiBaoCao" onclick="prepareBaoCaoBangQC(${diemdat.BangQuangCaos[j].id})"><i class="text-danger bi bi-exclamation-diamond rounded-3 px-2 py-1 fw-bold" style="font-size:15px;  border: 1.5px solid var(--Scarlet, #F42C04); text-decoration: none; float: inline-end;"> Báo cáo vi phạm</i></button>
							</div>
                      		
                    	</div>`;
					}
					var bsOffcanvas = new bootstrap.Offcanvas(offcanvasElement);
					bsOffcanvas.show();
					
				}
			});

			
		}
		}

	function showdetails(i, j) {
		var diemdat = diemdatsArray[i];
		const offcanvasElement = document.getElementById("detailsInfo");
		if (offcanvasElement) {
				offcanvasElement.querySelector('#adsDetails').innerHTML = 
				`
				<img src="${diemdat.BangQuangCaos[j].DiaChiAnh}" class="pb-1 w-100" alt="${diemdat.DiaChi}">
				<div class="col-md-12">
					<div class="card border-0 fs-1" style="background-color: #E8F8EE;">
						<div class="card-body">
							<h3 style="font-size: 18px; font-weight: 700;">${loaibangquangcaosArray[diemdat.BangQuangCaos[j].LoaiBangQuangCaoId].Ten}</h3>
							<h5 style="font-size: 15px;">${diemdat.DiaChi}</h5>
						</div>
					</div>
				</div>
				<div class="col-md-12">
					<div class="card border-0" style="background-color: #B4DBFF;">
						<div class="card-body fw-bold">
							<p>Ngày hết hạn hợp đồng: ${diemdat.BangQuangCaos[j].NgayHetHan}</p>
							<p>Kích thước: ${diemdat.BangQuangCaos[j].KichThuoc}</p>
							<p>Số lượng:</p>
							<p>Hình thức: ${diemdat.HinhThucDiemDat.Ten}</p>
							<p>Phân loại: ${diemdat.LoaiDiemDat.Ten}</p>
						</div>
					</div>
				</div>
				<div class="pt-3">
					<button type="button" class="btn bg-transparent" data-bs-toggle="modal" data-bs-target="#guiBaoCao" onclick="prepareBaoCaoBangQC(${diemdat.BangQuangCaos[j].id})"><i class="text-danger bi bi-exclamation-diamond rounded-3 px-2 py-1 fw-bold" style="font-size:15px;  border: 1.5px solid var(--Scarlet, #F42C04); text-decoration: none; float: inline-end;"> Báo cáo vi phạm</i></button>
					</button>
				</div>
				`
			}
		var bsOffcanvas = new bootstrap.Offcanvas(offcanvasElement);
		bsOffcanvas.show();
	};

	function clearMarkers(){
		for (let i =0; i< markers.length; i++){
		markers[i].setMap(null);
		}
		markers = [];
	}
	
  function reverseGeocode(location, map) {
    // location.lat
    // location.lng
    geocoder.geocode({ location: location }, function (results, status) {
      if (status === "OK" && results[0]) {
        const formattedAddress = results[0].formatted_address;
        console.log("Clicked Location:", location);

        let check = 0;
        for (let i=0; i<diemdatsArray.length; i++) {
          if (diemdatsArray[i].DiaChi == formattedAddress && check==0) {
            check = 1;
          }
        }

        if (check==0) {
          const offcanvasElement = document.getElementById("randomInfo");
          if (offcanvasElement) {
            offcanvasElement.querySelector('#diachingaunhien').innerHTML = formattedAddress;
            offcanvasElement.querySelector('#valdiachingaunhien').value = formattedAddress;
            var bsOffcanvas = new bootstrap.Offcanvas(offcanvasElement);
					  bsOffcanvas.show();
          }
        }

        /* Khong hien marker -> Hien panel voi thong tin so luoc & dsach bao cao
        const marker = new google.maps.Marker({
          position: location,
          map: map,
          title: "Clicked Location",
        });
        markers.push(marker);*/
      } else {
        alert("Reverse geocode failed for the clicked location.");
        console.error("Reverse geocode failed for the clicked location. Status:", status);
        console.error("Error details:", results);
      }
    });
  }

  window.initMap = initMap;
</script>
<!--container-->
  <!-- <form action="" method="GET"> -->
	<div class="container-fluid pt-5">
		<div class="input-group pb-1 mt-3" style="padding-left: 15px; padding-right: 15px; width: auto;">
		<input class="col-md-4 form-control" id="address" type="text" placeholder="Tìm kiếm theo địa chỉ" style="margin-left:auto;">
			<button class="bi bi-search border-0 rounded-1 fs-4 mx-1" onclick="geocodeAddress(document.getElementById('address').value, map)"></button>
			<button class="bi bi-arrow-clockwise border-0 rounded-1 fs-4 mx-1" onclick="setMarkers(map)"></button>

			<div class="btn-group d-flex justify-content-center align-items-center me-2" role="group">
			<label class="switch me-1">
				<input id="toggle-chuaQH-markers" type="checkbox" class="border-0 rounded-1 mx-1" checked/>
				<span class="slider round"></span>
			</label>
			<div>  Chưa quy hoạch</div>
			</div>

			<div class="btn-group d-flex justify-content-center align-items-center" role="group">
			<label class="switch me-1">
				<input id="toggle-daQH-markers" type="checkbox" class="border-0 rounded-1 mx-1" checked/>
				<span class="slider round"></span>
			</label>
			<div>  Đã quy hoạch</div>
			</div>

      <div class="btn-group d-flex justify-content-center align-items-center me-2" role="group">
			<label class="switch me-1">
				<input id="toggle-coQC-markers" type="checkbox" class="border-0 rounded-1 mx-1" checked/>
				<span class="slider round"></span>
			</label>
			<div> Có bảng QC</div>
			</div>

      <div class="btn-group d-flex justify-content-center align-items-center me-2" role="group">
			<label class="switch me-1">
				<input id="toggle-khongQC-markers" type="checkbox" class="border-0 rounded-1 mx-1" checked/>
				<span class="slider round"></span>
			</label>
			<div>  Không bảng QC</div>
			</div>

		</div>
	<!-- </form> -->
	</div>
		<div id="map"></div>

        <script
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMClFFRi9fjEqedH3P6jIueg6DYzQnB_g&callback=initMap&v=weekly"
          defer
        ></script>

        <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<!--/container-->
<div class="offcanvas offcanvas-start" tabindex="-1" id="markerInfo" aria-labelledby="markerInfoLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="markerInfoLabel">Thông tin điểm đặt</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
        <div class="card border-0 fs-1" style="background-color: #E8F8EE;">
			<div class="card-body">
				<h3 class="bi bi-geo-alt" style="font-size: 16px; font-weight: 700; color: #003220;"> Thông tin điểm đặt</h3>
				<h3 id="diachi" style="font-size: 15px; font-weight: 700; color: #003220; padding-left: 20px;"></h3>
				<h5 id="khuvuc" style="font-size: 15px; padding-left: 20px;"></h5>
        <h5 id="loaivitri" style="font-size: 15px; padding-left: 20px;"></h5>
        <h5 id="hinhthuc" style="font-size: 15px; padding-left: 20px;"></h5>
        <h5 id="quyhoach" style="font-size: 15px; padding-left: 20px; font-weight: bold; font-style: italic;"></h5>
        <img id="diachianh" src="" class="pb-1" alt="" width="325" style="padding-left: 20px;">
        <input id="iddiemdat" type="hidden" value="" style="height: 30px; width: 150px; color: white;; background-color: #7F56D9; border-radius: 8px; border-style: none;">

				<div>
					<button type="button" class="btn bg-transparent" data-bs-toggle="modal" data-bs-target="#guiBaoCao" onclick="prepareBaoCaoDiemDat()"><i class="text-danger bi bi-exclamation-diamond rounded-3 px-2 py-1 fw-bold" style="font-size:15px;  border: 1.5px solid var(--Scarlet, #F42C04); text-decoration: none; float: inline-end;"> Báo cáo vi phạm</i></button>
				</div>
          	</div>
        </div>
        <div class="card border-0 fs-1 my-2" style="background-color: #B4DBFF;">
            <div class="card-body" style="background-color: #B4DBFF;">
            	<h3 class="bi bi-info-circle" style="font-size: 16px; font-weight: 700; color: #003220; background-color: #B4DBFF;"> Thông tin bảng quảng cáo</h3>
            	<div class="card border-0 fs-1" id="adsInfo">
                </div>
            </div>
        </div>
  </div>
</div>
        
<!--sidepanel2-->
<div class="offcanvas offcanvas-start" tabindex="-1" id="detailsInfo" aria-labelledby="detailsInfoLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="detailsInfoLabel">Chi tiết bảng quảng cáo</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body" id="adsDetails">
  </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="randomInfo" aria-labelledby="randomInfoLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="randomInfoLabel">Thông tin vị trí</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <div class="card border-0 fs-1" style="background-color: #E8F8EE;">
			<div class="card-body">
				<h3 class="bi bi-geo-alt" style="font-size: 16px; font-weight: 700; color: #003220;"> Thông tin địa điểm</h3>
				<h3 id="diachingaunhien" style="font-size: 15px; font-weight: 700; color: #003220; padding-left: 20px;"></h3>
        <input id="valdiachingaunhien" type="hidden" value="">
				<div>
					<button type="button" class="btn bg-transparent" data-bs-toggle="modal" data-bs-target="#guiBaoCao" onclick="prepareBaoCaoDiaDiem()"><i class="text-danger bi bi-exclamation-diamond rounded-3 px-2 py-1 fw-bold" style="font-size:15px;  border: 1.5px solid var(--Scarlet, #F42C04); text-decoration: none; float: inline-end;"> Báo cáo vi phạm</i></button>
				</div>
      </div>
    </div>
  </div>
</div>
  <!--Modal gui bao cao-->
<div class="modal fade modal-lg" id="guiBaoCao" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
    <form action="/guiBaoCao" method="POST" onsubmit="return validateRecaptcha()">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalLabel">Gửi báo cáo về Sở VH-TT</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="container-fluid">
            <div class="row m-1">
              <p class="fw-bold mb-2">Thông tin báo cáo</p>

              <div class="row">
                <div class="col-md-12">
                  <div class="row mb-2">
                    <div>
                      <label for="HinhThucBaoCaoId" class="form-label mb-0">Hình thức báo cáo</label>
                      <select id="HinhThucBaoCaoId" name="HinhThucBaoCaoId" class="form-select" aria-label="Default select example">
                        <option value=1 selected>Tố giác sai phạm</option>
                        <option value=2>Đăng ký nội dung</option>
                        <option value=3>Đóng góp ý kiến</option>
                        <option value=4>Giải đáp thắc mắc</option>
                      </select>
                    </div>
                  </div>

                  <div class="row mb-2">
                    <div>
                      <label for="HoTen" class="form-label mb-0">Họ tên người gửi báo cáo</label>
                      <input type="text" class="form-control" id="HoTen" name="HoTen" placeholder="Họ tên">
                    </div>
                  </div>

                  <div class="row mb-2">
                    <div>
                      <label for="Email" class="form-label mb-0">Email</label>
                      <input type="email" class="form-control" id="Email" name="Email" placeholder="Email">
                    </div>
                  </div>

                  <div class="row mb-2">
                    <div>
                      <label for="DienThoai" class="form-label mb-0">Điện thoại liên lạc</label>
                      <input type="text" class="form-control" id="DienThoai" name="DienThoai" placeholder="">
                    </div>
                  </div>

                  <div class="row mb-2">
                    <div>
                      <label for="NoiDung" class="form-label mb-0">Nội dung báo cáo (Chỉ được gửi tối đa 2 ảnh minh họa)</label>
                      <textarea id="editor" class="rounded-2 border-secondary" name="NoiDung"></textarea>
                    </div>
                  </div>

                  <div class="row mb-2">
                    <div>
                      <div class="mb-0">
                          <div class="g-recaptcha" data-sitekey="6Le4ZC8pAAAAABPs7kETfO2SWfFyf7PnXsl7TyiH"></div>
                      </div>
                    </div>
                  </div>
                  <input type="hidden" id="laDiemDat" name="laDiemDat" value="">
                  <input type="hidden" id="DiemDatId" name="DiemDatId" value="">
                  <input type="hidden" id="BangQuangCaoId" name="BangQuangCaoId" value="">
                  <input type="hidden" id="DiaChiNgauNhien" name="DiaChiNgauNhien" value="">
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer mt-2">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
          <button type="submit" class="btn btn-primary" id="guiyeucau" onclick="return checkMaxImage()">Gửi yêu cầu</button>
        </div>
      </div>
    </form>
	</div>
</div>

<script>
  function prepareBaoCaoDiemDat() {
    const guiBaoCaoModal = document.getElementById("guiBaoCao");
		if (guiBaoCaoModal) {
      guiBaoCaoModal.querySelector('#laDiemDat').value = "true";
      guiBaoCaoModal.querySelector('#DiemDatId').value = document.querySelector('#iddiemdat').value;
    }
  }
  function prepareBaoCaoBangQC(id) {
    const guiBaoCaoModal = document.getElementById("guiBaoCao");
		if (guiBaoCaoModal) {
      guiBaoCaoModal.querySelector('#laDiemDat').value = "false";
      guiBaoCaoModal.querySelector('#DiemDatId').value = document.querySelector('#iddiemdat').value;
      guiBaoCaoModal.querySelector('#BangQuangCaoId').value = id;
    }
  }
  function prepareBaoCaoDiaDiem() {
    const guiBaoCaoModal = document.getElementById("guiBaoCao");
    if (guiBaoCaoModal) {
      guiBaoCaoModal.querySelector('#laDiemDat').value = "null";
      guiBaoCaoModal.querySelector('#DiaChiNgauNhien').value = document.querySelector('#valdiachingaunhien').value;
      console.log(document.querySelector('#diachingaunhien').value);
      console.log(guiBaoCaoModal.querySelector('#DiaChiNgauNhien').value);
    }
  }
</script>
        <!--/container-->
{{!-- tinymce --}}
<script src="https://cdn.tiny.cloud/1/vqxvddp1yo9we3090oejpm5byq3f9taeds999743y9ra4yk6/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
function checkMaxImage(){
  var editor = tinymce.get("editor");
  if (editor) {
    var ndbaocao = editor.getContent();
    var parser = new DOMParser();
    var doc = parser.parseFromString(ndbaocao, 'text/html');
    // Get all img elements in the parsed document
    var imgTag = doc.getElementsByTagName("img");
    if(imgTag.length <=2)
    {
      return true;
    }
    else{
      alert("Một báo cáo chỉ được gửi tối đa 2 hình");
      return false;
    }
  }
}
function filehandling(cb, value, meta) {
  var input = document.createElement('input');
  input.setAttribute('type', 'file'); 
  input.setAttribute('accept', 'image/*');
  input.onchange = function() {
  var file = this.files[0];
  var reader = new FileReader();
  reader.onload = function () {
    var id = 'blobid' + (new Date()).getTime();
    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
    var base64 = reader.result.split(',')[1];
    var blobInfo = blobCache.create(id, file, base64); 
    blobCache.add(blobInfo);
    // call the callback and populate the Title field with the file name
    cb(blobInfo.blobUri(), { title: file.name });
  };
  reader.readAsDataURL(file);
  };
  input.click();         
}
// Prevent Bootstrap dialog from blocking focusin
document.addEventListener('focusin', (e) => 
  {
    if (e.target.closest(".tox-tinymce-aux, .moxman-window, .tam-assetmanager-root") !== null) 
    {
      e.stopImmediatePropagation();
    }
});
tinymce.init({
  selector:'#editor',
  menubar: false,
  statusbar: false,
  //plugins: 'autoresize anchor autolink charmap code codesample directionality fullpage help hr image imagetools insertdatetime link lists media nonbreaking pagebreak preview print searchreplace table template textpattern toc visualblocks visualchars',
  plugins: [ "image", "link"],
  paste_block_drop: false,
  toolbar: 'undo redo | link image',
  skin: 'bootstrap',
  //toolbar_drawer: 'floating',
  //min_width: 5000,
  min_height: 200,           
  autoresize_bottom_margin: 16,
  add_form_submit_trigger : true,
  image_title: true,
  // enable automatic uploads of images represented by blob or data URIS
  automatic_uploads: true, // add custom filepicker only to Image dialog
  file_picker_types: 'image',
  file_picker_callback: filehandling,
  setup: (editor) => {
      editor.on('init', () => {
          editor.getContainer().style.transition="border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out"
      });
      editor.on('focus', () => {
          editor.getContainer().style.boxShadow="0 0 0 .2rem rgba(0, 123, 255, .25)",
          editor.getContainer().style.borderColor="#80bdff"
      });
      editor.on('blur', () => {
          editor.getContainer().style.boxShadow="",
          editor.getContainer().style.borderColor=""
      });
  }
});

</script>