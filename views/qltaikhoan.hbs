	<div class="container-fluid pt-5">
		<!-- Thống kê báo CÁO -->
		<div class="row mb-3">
			<div class="page-title">
				Quản lý Tài khoản
			</div>
		</div>
		<!--button bar-->
		<div class="row">
			<div class="btn-toolbar mb-3 justify-content-end" role="toolbar" aria-label="Toolbar">
				<div class="me-3">
					<button type="button" class="btn btn-secondary indigo" data-bs-toggle="modal" data-bs-target="#themTaiKhoanModal">
						<i class="bi bi-plus"></i> Tạo tài khoản cán bộ</button>
				</div>
				<!--
				<div class="me-3">
					<form method = "get" action ="/canbo/xlbaocao">
						<div class="dropdown"> 
							<button class="btn btn-primary dropdown-toggle"
									type="button" 
									id="multiSelectDropdown"
									data-bs-toggle="dropdown" 
									aria-expanded="false"> 
								Chọn Phường 
							</button> 
							<ul class="dropdown-menu" 
								aria-labelledby="multiSelectDropdown"> 
								{{#each phuongs}}
								<li> 
									<label> 
										<input type="checkbox" 
											value="{{id}}" name="phuong" {{#if (isInArray id (json ../checkedPhuongs))}}checked{{/if}}> 
										{{Ten}} 
									</label> 
								</li> 
								{{/each}}
								<button type="submit" class="btn btn-sm btn-primary float-end">Áp dụng</button>
							</ul> 
						</div> 
					</form>
				</div>-->
				<div class="me-3">
					<a href="/canbo/xlbaocao" type="button" class="btn btn-white border">View all</a>
				</div>
				<div class="me-3">
					<form method = "get" action ="/canbo/xlbaocao">
						<div class="input-group">
							<input type="text" name="search" class="form-control" placeholder="Tìm kiếm" aria-label="search">
							<button type="submit" class="btn border"><i class="bi bi-search"></i></button>
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class="table-responsive mt-3">
			<table class="table table-hover container-fluid w-100">
				<thead>
					<tr>
						<th scope="col">STT</th>
						<th scope="col">Tên tài khoản</th>
						<th scope="col">Họ tên</th>
						<th scope="col">Ngày sinh</th>
						<th scope="col">Email</th>
						<th scope="col">Điện thoại</th>
						<th scope="col">Loại cán bộ</th>
						<th scope="col">Nơi công tác</th>
						<th scope="col"> </th>
					</tr>
				</thead>
				<tbody>
					{{#each taikhoans}}
					<tr>
						<td scope="row">{{inc @index}}</td>
						<td>{{TenTaiKhoan}}</td>
						<td>{{HoTen}}</td>
						<td>{{showDate NgaySinh}}</td>
						<td>{{Email}}</td>
						<td>{{DienThoai}}</td>
						<td>{{LoaiTaiKhoan.HoTen}}</td>
						<td>{{KhuVuc}}</td>
						<td>
							<i role="button" class="bi bi-pen-fill text-info me-3" data-bs-toggle="modal"
							data-bs-target="#editTaiKhoanModal" onclick="showEditTaiKhoanModal(this)" 
							data-id="{{id}}" data-name="{{HoTen}}" data-dob="{{NgaySinh}}"
							data-email="{{Email}}" data-mobile="{{DienThoai}}" data-loaitk="{{LoaiTaiKhoanId}}"
							data-khuvuc="{{KhuVuc}}"></i>
							<i role="button" class="bi bi-trash text-danger delete-btn" data-id="{{id}}"></i>         
						</td>
					</tr> 
					{{/each}}                          
				</tbody>
			</table>
		</div>
	</div>

  <div class="modal fade" id="editTaiKhoanModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <form action="" id="editTaiKhoanForm" onsubmit="editTaiKhoan(event)">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">
              Chỉnh sửa thông tin tài khoản
            </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="row g-2">
              <div class="col mb-3">
                <label for="nameEdit" class="form-label">Họ và tên</label>
                <input type="text" id="nameEdit" name="name" class="form-control" placeholder="John"
                  disabled />
              </div>
              <div class="col mb-3">
                <label for="dobEdit" class="form-label">Ngày sinh</label>
                <input type="date" id="dobEdit" name="dob" class="form-control" placeholder="Lin" disabled />
              </div>
            </div>
            <div class="row g-2">
              <div class="col mb-3">
                <label for="emailEdit" class="form-label">Email</label>
                <input type="email" id="emailEdit" name="email" class="form-control" placeholder="xxxx@xxx.xx"
                  disabled />
              </div>
              <div class="col mb-3">
                <label for="mobileEdit" class="form-label">Điện thoại</label>
                <input type="text" id="mobileEdit" name="mobile" class="form-control" placeholder="12345678" disabled/>
              </div>
            </div>
            <div class="row g-2">
              <div class="col mb-3">
                <label for="loaitkEdit" class="form-label">Loại cán bộ</label>
                <select id="loaitkEdit" name="loaitk" class="form-control form-select">
					{{#each loaitaikhoans}}
            		<option value="{{id}}">{{HoTen}}</option>
					{{/each}}
        		</select>
              </div>
              <div class="col mb-3">
				<div class="col">
					<label for="quanEdit" class="form-label">Quận</label>
					<select id="quanEdit" name="quan" class="form-control form-select"> 
						<option value="#">Chọn Quận</option>
						{{#each quans}}
							<option value="{{id}}">{{Ten}}</option>
						{{/each}}
					</select>
				</div>
				<div class="col">
					<label for="phuongEdit" class="form-label">Phường</label>
					<select id="phuongEdit" name="phuong" class="form-control form-select" disabled>
						<option value="#">Chọn Phường</option>
						{{#each phuongs}}
							<option data-value="{{QuanId}}" value="{{id}}">{{Ten}}</option>
						{{/each}}
					</select>
				</div>
              </div>
            </div>
            <div class="text-center badge bg-label-danger" id="errorMessage"></div>
          </div>
          <div class="modal-footer">
            <input type="hidden" name="id" id="id" value="" />
            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" id="closeBtnEdit">
              Close
            </button>
            <button type="submit" class="btn btn-primary">
              Save
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>

<div class="modal fade" tabindex="-1" id="confirmModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xóa tài khoản</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Bạn chắc chứ?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
        <button type="button" class="btn btn-primary" id="confirmButton">Xóa</button>
      </div>
    </div>
  </div>
</div>
 
<div class="modal fade" id="themTaiKhoanModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog" role="document">
	<form action="/so/qltaikhoan" id="themTaiKhoanForm" method="POST">
		<div class="modal-content">
		<div class="modal-header">
			<h5 class="modal-title" id="userModalTitle">
				Thêm tài khoản
			</h5>
			<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		</div>
		<div class="modal-body">
            <div class="row g-2">
              <div class="col mb-3">
                <label for="username" class="form-label">Tên tài khoản</label>
                <input type="text" id="username" name="username" class="form-control" placeholder="John"
                  required />
              </div>
            </div>
            <div class="row g-2">
              <div class="col mb-3">
                <label for="loaitk" class="form-label">Loại cán bộ</label>
                <select id="loaitk" name="loaitk" class="form-control form-select">
					{{#each loaitaikhoans}}
            		<option value="{{id}}">{{HoTen}}</option>
					{{/each}}
        		</select>
              </div>
              <div class="col mb-3">
				<div class="col">
					<label for="quan" class="form-label">Quận</label>
					<select id="quan" name="quan" class="form-control form-select"> 
						<option value="#">Chọn Quận</option>
						{{#each quans}}
							<option value="{{id}}">{{Ten}}</option>
						{{/each}}
					</select>
				</div>
				<div class="col">
					<label for="phuong" class="form-label">Phường</label>
					<select id="phuong" name="phuong" class="form-control form-select">
						<option value="#">Chọn Phường</option>
						{{#each phuongs}}
							<option data-value="{{QuanId}}" value="{{id}}">{{Ten}}</option>
						{{/each}}
					</select>
				</div>
              </div>
            </div>
            <div class="text-center badge bg-label-danger" id="errorMessage"></div>
          </div>
		<div class="modal-footer">
			<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" id="closeBtn">
			Close
			</button>
			<button type="submit" class="btn btn-primary">
			Save
			</button>
		</div>
		</div>
	</form>
	</div>
</div>

<script>
	async function editTaiKhoan(e) {
		e.preventDefault();

		let phuongValue = document.querySelector("#phuongEdit");
		let phuongText = phuongValue.options[phuongValue.selectedIndex].text;
		let quanValue = document.querySelector("#quanEdit");
		let quanText = quanValue.options[quanValue.selectedIndex].text;

		const formData = new FormData(document.getElementById("editTaiKhoanForm"));
		let data = Object.fromEntries(formData.entries());
		data.tenphuong = phuongText;
		data.tenquan = quanText;

		let res = await fetch("/so/qltaikhoan", {
		method: 'PUT',
		headers:{
			"Content-Type":"application/json",
		},
		body: JSON.stringify(data),
		});
  
	location.reload();
  }
  
	async function deleteUser(id){
	let res= await fetch(`/so/qltaikhoan/${id}`, {
	  method: "DELETE",
	});
	location.reload();
  }
    function showEditTaiKhoanModal(btn){
		document.querySelector("#id").value = btn.dataset.id;
		document.querySelector("#nameEdit").value = btn.dataset.name;
		document.querySelector("#dobEdit").value = btn.dataset.dob;
		document.querySelector("#emailEdit").value = btn.dataset.email;
		document.querySelector("#mobileEdit").value = btn.dataset.mobile;
		document.querySelector("#loaitkEdit").value = btn.dataset.loaitk;
		let khuvuc = btn.dataset.khuvuc.split(',');
		let quanList = document.querySelector("#quanEdit");
		let phuongList = document.querySelector("#phuongEdit");
		if(btn.dataset.loaitk == 1) {
			phuongList.disabled = false;
		}
		else if (btn.dataset.loaitk == 2) {
			phuongList.disabled = true;
		};

		if(khuvuc[1]) {
			let tenquan = khuvuc[1].trimStart();
			let tenphuong = khuvuc[0];
			let idquan = 0;
			for(let i=1; i<quanList.options.length; i++){
				if(quanList.options[i].text == tenquan){
					quanList.selectedIndex = i;
					idquan = quanList.options[i].value;
					break;
    			}
			}
			var bangqcOptions = document.getElementById('phuongEdit').options;
			for (var i = 0; i < bangqcOptions.length; i++) {
				var option = bangqcOptions[i];
				var optionDataValue = option.getAttribute('data-value');
				if (parseInt(optionDataValue) === parseInt(idquan)) {
				option.style.display = '';
				} else {
				option.style.display = 'none';
				}
			}
			for(let j=1; j<phuongList.options.length; j++){
				if(phuongList.options[j].text == tenphuong && phuongList.options[j].style.display != 'none'){
					phuongList.selectedIndex = j;
					break;
    			}
			}
		}
		else {
			let idquan = 0;
			for(let i=0; i<quanList.options.length; i++){
				if(quanList.options[i].text == khuvuc[0]){
					quanList.selectedIndex = i;
					idquan = quanList.options[i].value;
					break;
    			}
			}
			var bangqcOptions = document.getElementById('phuongEdit').options;

			for (var i = 0; i < bangqcOptions.length; i++) {
				var option = bangqcOptions[i];
				var optionDataValue = option.getAttribute('data-value');
				if (parseInt(optionDataValue) === parseInt(idquan)) {
				option.style.display = '';
				} else {
				option.style.display = 'none';
				}
			}
			phuongList.selectedIndex= '#';
		}
	}

  document.querySelectorAll(".delete-btn").forEach((btnConfirm) => {
    btnConfirm.addEventListener("click", (e) => {
        let id = e.target.dataset.id;

        // Show the modal
        var myModal = new bootstrap.Modal(document.getElementById('confirmModal'), {
            keyboard: false
        });
        myModal.show();

        // Add an event listener to the "Yes" button
        document.getElementById('confirmButton').addEventListener('click', function() {
            deleteUser(id);
            myModal.hide();
        });
    });
});


	document.getElementById('quanEdit').addEventListener('change', function() {
		var selectedDiemdat = this.value;
		var bangqcSelect = document.getElementById('phuongEdit');
		var loaitk = document.getElementById('loaitkEdit');
		if (selectedDiemdat === "#" || loaitk.value === '2') {
			bangqcSelect.value = "#";
			bangqcSelect.disabled = true;
			return;
		}
		bangqcSelect.disabled = false;
		bangqcSelect.value = "#";
		var bangqcOptions = document.getElementById('phuongEdit').options;

		for (var i = 0; i < bangqcOptions.length; i++) {
			var option = bangqcOptions[i];
			var optionDataValue = option.getAttribute('data-value');
			if (parseInt(optionDataValue) === parseInt(selectedDiemdat)) {
			option.style.display = '';
			} else {
			option.style.display = 'none';
			}
		}
	});

	document.getElementById('loaitkEdit').addEventListener('change', function() {
		let phuongList = document.getElementById("phuongEdit");
		if (this.value == 1) {
			phuongList.disabled = false;
		}
		else if (this.value == 2) {
			phuongList.disabled = true;
			phuongList.value = "#";
		}
	});

	const chBoxes = document.querySelectorAll('.dropdown-menu input[type="checkbox"]'); 
    const dpBtn = document.getElementById('multiSelectDropdown'); 
    let mySelectedListItems = [];

    function handleCB() { 
        mySelectedListItems = []; 
        let mySelectedListItemsText = ''; 
  
        chBoxes.forEach((checkbox) => { 
            if (checkbox.checked) { 
                mySelectedListItems.push(checkbox.value); 
                let labelText = checkbox.parentNode.textContent.trim();
            	mySelectedListItemsText += labelText + ', '; 
            } 
        }); 
  
		if (mySelectedListItems.length > 3) {
			dpBtn.innerText = 'Đã chọn (' + mySelectedListItems.length + ')';
		} else {
			dpBtn.innerText = 
			mySelectedListItems.length > 0 
			? mySelectedListItemsText.slice(0, -2) : 'Chọn Phường'; 
		} 
	} 
  
	chBoxes.forEach((checkbox) => { 
		checkbox.addEventListener('change', handleCB); 
	}); 
	handleCB();

	document.getElementById('quan').addEventListener('change', function() {
		var selectedQuan = this.value;
		var phuongSelect = document.getElementById('phuong');
		let loaitk = document.getElementById('loaitk');
		if (selectedQuan === "#" || loaitk.value === '2') {
			phuongSelect.value = "#";
			phuongSelect.disabled = true;
			return;
		}
		phuongSelect.disabled = false;
		phuongSelect.value = "#";
		var phuongOptions = document.getElementById('phuong').options;

		for (var i = 0; i < phuongOptions.length; i++) {
			var option = phuongOptions[i];
			var optionDataValue = option.getAttribute('data-value');
			if (parseInt(optionDataValue) === parseInt(selectedQuan)) {
			option.style.display = '';
			} else {
			option.style.display = 'none';
			}
		}
	});
	document.getElementById('loaitk').addEventListener('change', function() {
		let phuongList = document.getElementById("phuong");
		if (this.value == 1) {
			phuongList.disabled = false;
		}
		else if (this.value == 2) {
			phuongList.disabled = true;
			phuongList.value = "#";
		}
	});
</script>